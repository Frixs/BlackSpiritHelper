<UserControl x:Class="BlackSpiritHelper.OverlayScheduleSectionControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BlackSpiritHelper"
             xmlns:core="clr-namespace:BlackSpiritHelper.Core;assembly=BlackSpiritHelper.Core"
             mc:Ignorable="d" 
             d:DesignHeight="50" d:DesignWidth="200">
    
    <!-- Derived from OverlayWindow -->
    <StackPanel x:Name="OverlayScheduleSection" Orientation="{Binding OverlayOrientation, FallbackValue=Horizontal}"
                Margin="0"
                DataContext="{Binding ApplicationDataContent.ScheduleDesignModel,
                              Source={x:Static local:ViewModelLocator.Instance}}"
                Visibility="{Binding ApplicationDataContent.ScheduleDesignModel.IsRunning,
                             Source={x:Static local:ViewModelLocator.Instance},
                             Converter={local:BooleanToVisibilityGoneConverter}}">
        <!-- TODO: IsRunning & Show in overlay - multi condition -->

        <ItemsControl x:Name="ItemList" ItemsSource="{Binding NextItemPresenterList}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <!-- Wrap Items into stack panel -->
                    <StackPanel Orientation="{Binding DataContext.OverlayOrientation, FallbackValue=Horizontal,
                        RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}">
                    </StackPanel>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <!-- Template - add leading timer box -->
            <ItemsControl.Template>
                <ControlTemplate>

                    <StackPanel Orientation="{Binding DataContext.OverlayOrientation, FallbackValue=Horizontal,
                        RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}">

                        <!-- Leading timer box -->
                        <Border Width="{Binding Path=DataContext.OverlaySizeStyleValue, FallbackValue=50,
                                        RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}"
                                Height="{Binding Path=DataContext.OverlaySizeStyleValue, FallbackValue=50,
                                         RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Background" Value="{StaticResource ScheduleOverlayBackgroundBrushKey}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding WarningFlag}" Value="True">
                                            <Setter Property="Background" Value="{StaticResource WarningColorBrushKey}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            
                            <Grid Margin="{Binding ApplicationDataContent.OverlayDesignModel.OverlaySize, 
                                           Source={x:Static local:ViewModelLocator.Instance},
                                           Converter={local:OverlaySizeMarginValueConverter}, FallbackValue=5}">

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="2*" />
                                    <RowDefinition Height="2*" />
                                </Grid.RowDefinitions>

                                <!-- Schedule title -->
                                <Viewbox Grid.Row="0">
                                    <TextBlock Text="NEXT"
                                               FontFamily="{StaticResource LatoHeavy}"
                                               FontSize="14"
                                               VerticalAlignment="Top"
                                               HorizontalAlignment="Center">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Foreground" 
                                                        Value="{StaticResource ScheduleOverlayForegroundBrushKey}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding WarningFlag}" Value="True">
                                                        <Setter Property="Foreground" 
                                                                Value="{StaticResource WarningForegroundBrushKey}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Viewbox>

                                <!-- Countdown -->
                                <Viewbox Grid.Row="1">
                                    <TextBlock Text="{Binding TimeLeftOverlayPresenter, FallbackValue=0.00:00:00}"
                                               FontFamily="{StaticResource LatoHeavy}"
                                               VerticalAlignment="Bottom"
                                               HorizontalAlignment="Center">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Foreground" Value="{StaticResource ScheduleOverlayForegroundBrushKey}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding WarningFlag}" Value="True">
                                                        <Setter Property="Foreground" 
                                                                Value="{StaticResource WarningForegroundBrushKey}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Viewbox>

                            </Grid>
                        </Border>
                        
                        <!-- Items Presenter -->
                        <ItemsPresenter />
                        
                    </StackPanel>
                    
                </ControlTemplate>
            </ItemsControl.Template>

            <ItemsControl.ItemTemplate>
                <DataTemplate>

                    <!-- Item wrapper -->
                    <Border Width="{Binding Path=DataContext.OverlaySizeStyleValue, FallbackValue=50,
                                    RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}"
                            Height="{Binding Path=DataContext.OverlaySizeStyleValue, FallbackValue=50,
                                     RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="{Binding ColorHEX, Converter={local:StringRGBToBrushConverter}}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WarningFlag}" Value="True">
                                        <Setter Property="Background" Value="{StaticResource WarningColorBrushKey}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <Grid Margin="{Binding ApplicationDataContent.OverlayDesignModel.OverlaySize, 
                                       Source={x:Static local:ViewModelLocator.Instance},
                                       Converter={local:OverlaySizeMarginValueConverter}, FallbackValue=5}">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="2*" />
                                <RowDefinition Height="2*" />
                            </Grid.RowDefinitions>

                            <!-- Item Shortcut -->
                            <Viewbox Grid.Row="0">
                                <TextBlock Text="{Binding NameShortcut}"
                                               FontFamily="{StaticResource LatoHeavy}"
                                               FontSize="14"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" 
                                                        Value="{Binding ColorHEX, 
                                                                Converter={local:StringRGBToLightOrDarkBrushConverter},
                                                                ConverterParameter={StaticResource ForegroundColorDifference}}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding WarningFlag}" Value="True">
                                                    <Setter Property="Foreground" 
                                                                Value="{StaticResource WarningForegroundBrushKey}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Viewbox>

                            <!-- Item Name -->
                            <Viewbox Grid.Row="1">
                                <TextBlock Text="{Binding Name}"
                                               FontFamily="{StaticResource LatoHeavy}"
                                               FontSize="14"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" 
                                                        Value="{Binding ColorHEX, 
                                                                Converter={local:StringRGBToLightOrDarkBrushConverter},
                                                                ConverterParameter={StaticResource ForegroundColorDifference}}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding WarningFlag}" Value="True">
                                                    <Setter Property="Foreground" 
                                                                Value="{StaticResource WarningForegroundBrushKey}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Viewbox>

                        </Grid>
                    </Border>

                </DataTemplate>
            </ItemsControl.ItemTemplate>

        </ItemsControl>

    </StackPanel>
    
</UserControl>
