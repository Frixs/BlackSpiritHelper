<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <Style TargetType="{x:Type TextBlock}" x:Key="TitleBarText" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Foreground" Value="{StaticResource TextNormalBrushKey}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Margin" Value="5 8" />
    </Style>

    <!-- TextBox with placeholder -->
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0 5 0 5" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxLineBackgroundBrushKey}" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">

                    <Grid>
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <!-- Placeholder -->
                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   FontFamily="{StaticResource LatoThin}"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="{StaticResource TextBoxPlaceholderForegroundBrushKey}"
                                   >
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>

                        </TextBlock>

                        <!-- Validation exclamation mark -->
                        <TextBlock IsHitTestVisible="False"
                                   Name="exclamation"
                                   Text="{StaticResource FontAwesomeExclamationCircleIcon}"
                                   FontFamily="{StaticResource FontAwesomeSolid}"
                                   Foreground="{StaticResource TextBoxLineErrorBackgroundBrushKey}"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Visibility="Collapsed" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBoxLineFocusBackgroundBrushKey}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBoxLineFocusBackgroundBrushKey}"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                            <Setter Property="Foreground" Value="{StaticResource TextBoxLineErrorBackgroundBrushKey}" />
                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxLineErrorBackgroundBrushKey}" />
                            <Setter Property="Visibility" TargetName="exclamation" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Delete default error template -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--Chechbox Input -->
    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontFamily" Value="{StaticResource LatoLight}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxLineBackgroundBrushKey}" />

        <!-- Delete default error template -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxLineFocusBackgroundBrushKey}"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxLineErrorBackgroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Slider Input -->
    <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontFamily" Value="{StaticResource LatoLight}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxLineBackgroundBrushKey}" />

        <!-- Delete default error template -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxLineFocusBackgroundBrushKey}"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxLineErrorBackgroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ComboBox Input -->
    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontFamily" Value="{StaticResource LatoLight}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxLineBackgroundBrushKey}" />

        <!-- Delete default error template -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <!-- Validation exclamation mark -->
                    <TextBlock IsHitTestVisible="False"
                               Text="{StaticResource FontAwesomeExclamationCircleIcon}"
                               FontFamily="{StaticResource FontAwesomeSolid}"
                               Foreground="{StaticResource TextBoxLineErrorBackgroundBrushKey}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxLineFocusBackgroundBrushKey}"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxLineErrorBackgroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Color Picker -->
    <Style TargetType="{x:Type xctk:ColorPicker}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxLineBackgroundBrushKey}" />
        
        <!-- Delete default error template -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <!-- Validation exclamation mark -->
                    <TextBlock IsHitTestVisible="False"
                                   Name="exclamation"
                                   Text="{StaticResource FontAwesomeExclamationCircleIcon}"
                                   FontFamily="{StaticResource FontAwesomeSolid}"
                                   Foreground="{StaticResource TextBoxLineErrorBackgroundBrushKey}"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Visibility="Collapsed" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxLineFocusBackgroundBrushKey}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxLineFocusBackgroundBrushKey}"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxLineErrorBackgroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Time Span Input -->
    <Style TargetType="{x:Type xctk:TimeSpanUpDown}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontFamily" Value="{StaticResource LatoLight}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxLineBackgroundBrushKey}" />

        <!-- Delete default error template -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxLineFocusBackgroundBrushKey}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxLineFocusBackgroundBrushKey}"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxLineErrorBackgroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>