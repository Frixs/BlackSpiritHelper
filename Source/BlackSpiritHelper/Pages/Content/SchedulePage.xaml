<local:BasePage
    x:Class="BlackSpiritHelper.SchedulePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:BlackSpiritHelper.Core;assembly=BlackSpiritHelper.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:BlackSpiritHelper"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    Title="SchedulePage"
    d:DesignHeight="450"
    d:DesignWidth="800"
    x:TypeArguments="core:SchedulePageViewModel"
    mc:Ignorable="d">

    <ScrollViewer
        d:DesignStyle="{StaticResource WindowBackgroundControlStyle}"
        DataContext="{Binding ApplicationDataContent.ScheduleData, Source={x:Static local:ViewModelLocator.Instance}}"
        VerticalScrollBarVisibility="Auto">

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!--  Schedule top menu wrapper  -->
            <Border Grid.Row="0" Padding="10">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <!--  Left (Time) wrapper  -->
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!--  Next title & time  -->
                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                            <TextBlock
                                VerticalAlignment="Bottom"
                                FontFamily="{StaticResource LatoHeavy}"
                                FontSize="32"
                                Foreground="{StaticResource ScheduleForegroundBrushKey}"
                                Text="Next:" />
                            <TextBlock
                                Margin="10,0,0,0"
                                VerticalAlignment="Bottom"
                                FontFamily="{StaticResource LatoHeavy}"
                                FontSize="27"
                                Foreground="{Binding WarningFlag, Converter={local:WarningTimerColorSwapConverter}, ConverterParameter={StaticResource ScheduleForegroundTime}}"
                                Text="{Binding TimeLeftPresenter}" />

                            <!--  Run Button  -->
                            <Grid Margin="10,0,0,0" VerticalAlignment="Bottom">
                                <!--  Play Button  -->
                                <Button
                                    Width="32"
                                    Height="32"
                                    Command="{Binding PlayCommand}"
                                    Content="{StaticResource FontAwesomePlayIcon}"
                                    FontFamily="{StaticResource FontAwesomeSolid}"
                                    FontSize="18"
                                    Visibility="{Binding IsRunning, Converter={local:BooleanToVisibilityConverter}}">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource RegularButtonNoColor}" TargetType="Button">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectingTemplateFlag}" Value="True">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <!--  Stop Button  -->
                                <Button
                                    Width="32"
                                    Height="32"
                                    Command="{Binding StopCommand}"
                                    Content="{StaticResource FontAwesomeStopIcon}"
                                    FontFamily="{StaticResource FontAwesomeSolid}"
                                    FontSize="18"
                                    Visibility="{Binding IsRunning, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource RegularButtonNoColor}" TargetType="Button">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectingTemplateFlag}" Value="True">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </StackPanel>
                        <!--  Next items  -->
                        <StackPanel Grid.Row="1" Orientation="Vertical">
                            <ItemsControl ItemsSource="{Binding NextItemPresenterList}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>

                                        <TextBlock
                                            FontFamily="{StaticResource LatoBoldItalic}"
                                            FontSize="16"
                                            Foreground="{Binding ColorHEX, Converter={local:StringHEXToBrushConverter}}"
                                            Text="{Binding Name}" />

                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </Grid>

                    <!--  Right (Menu) wrapper  -->
                    <StackPanel
                        Grid.Column="2"
                        VerticalAlignment="Center"
                        Orientation="Vertical">
                        <!--  1st row - Template button menu / Template selection  -->
                        <Grid Margin="0,0,0,10" HorizontalAlignment="Right">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!--  Template ComboBox Label  -->
                            <TextBlock
                                Grid.Column="0"
                                Margin="10,0"
                                VerticalAlignment="Center"
                                FontFamily="{StaticResource LatoBold}"
                                FontSize="14"
                                Foreground="{StaticResource ScheduleForegroundBrushKey}"
                                Text="Template:" />
                            <!--  Control Button Panel  -->
                            <StackPanel
                                Grid.Column="1"
                                VerticalAlignment="Center"
                                Orientation="Horizontal">
                                <!--  Edit Button  -->
                                <Button
                                    Width="20"
                                    Height="20"
                                    Margin="0,0,5,0"
                                    Command="{Binding EditTemplateCommand}"
                                    Content="{StaticResource FontAwesomeEditIcon}"
                                    FontFamily="{StaticResource FontAwesomeSolid}"
                                    FontSize="10"
                                    ToolTip="Edit"
                                    Visibility="{Binding SelectedTemplate.IsPredefined, Converter={local:BooleanToVisibilityGoneConverter}, ConverterParameter=True}">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource RegularButton}" TargetType="Button">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SelectingTemplateFlag}" Value="True">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <!--  Add Button  -->
                                <Button
                                    Width="20"
                                    Height="20"
                                    Margin="0,0,5,0"
                                    Command="{Binding AddTemplateCommand}"
                                    Content="{StaticResource FontAwesomePlusIcon}"
                                    FontFamily="{StaticResource FontAwesomeSolid}"
                                    FontSize="10"
                                    ToolTip="Add New Template"
                                    Visibility="{Binding CanAddCustomTemplate, Converter={local:BooleanToVisibilityGoneConverter}}">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource RegularButton}" TargetType="Button">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SelectingTemplateFlag}" Value="True">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <!--  Clone Button  -->
                                <Button
                                    Width="20"
                                    Height="20"
                                    Margin="0,0,5,0"
                                    Command="{Binding CloneTemplateCommand}"
                                    Content="{StaticResource FontAwesomeCloneIcon}"
                                    FontFamily="{StaticResource FontAwesomeSolid}"
                                    FontSize="10"
                                    ToolTip="New Template as Copy"
                                    Visibility="{Binding CanAddCustomTemplate, Converter={local:BooleanToVisibilityGoneConverter}}">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource RegularButton}" TargetType="Button">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SelectingTemplateFlag}" Value="True">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>
                            <!--  ComboBox  -->
                            <ComboBox
                                Name="TemplateComboBox"
                                Grid.Column="2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                ItemsSource="{Binding TemplateTitleListPresenter}"
                                SelectedItem="{Binding SelectedTemplateSetter}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock FontFamily="{StaticResource LatoRegular}">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Foreground" Value="{StaticResource ScheduleForegroundBrushKey}" />
                                                    <Setter Property="Text" Value="{Binding}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Converter={local:ContainsLeadingCharConverter}, ConverterParameter='*'}" Value="True">
                                                            <Setter Property="Foreground" Value="DarkGreen" />
                                                            <Setter Property="Text" Value="{Binding Converter={local:SubstringConverter}, ConverterParameter=1}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <ComboBox.Style>
                                    <Style TargetType="ComboBox">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SelectingTemplateFlag}" Value="True">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>
                        </Grid>
                        <!--  2nd row - Local time modifier  -->
                        <Grid Margin="0,0,0,10" HorizontalAlignment="Right">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!--  Time Modifier  -->
                            <TextBlock
                                Grid.Column="0"
                                Margin="10,0"
                                VerticalAlignment="Center"
                                FontFamily="{StaticResource LatoBold}"
                                FontSize="14"
                                Foreground="{StaticResource ScheduleForegroundBrushKey}"
                                Text="Local Time Modifier:" />
                            <xctk:TimeSpanUpDown
                                Grid.Column="1"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                IsEnabled="{Binding IsRunning, Converter={local:BooleanInvertConverter}}"
                                Maximum="14:00:00"
                                Minimum="-14:00:00"
                                Value="{Binding LocalTimeOffsetModifier}" />
                        </Grid>
                        <!--  3rd row - Show in Overlay checkbox  -->
                        <Grid HorizontalAlignment="Right">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock
                                Grid.Column="0"
                                Margin="10,0"
                                VerticalAlignment="Center"
                                FontFamily="{StaticResource LatoBold}"
                                FontSize="14"
                                Foreground="{StaticResource ScheduleForegroundBrushKey}"
                                Text="Show In Overlay:" />
                            <!--  Show In Overlay CheckBox  -->
                            <CheckBox
                                Grid.Column="1"
                                IsChecked="{Binding ShowInOverlay}"
                                Style="{StaticResource CheckBoxLarge}" />
                        </Grid>
                        <!--  4th row - Custom items menu  -->
                        <Grid Margin="0,10,0,0" HorizontalAlignment="Right">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock
                                Grid.Column="0"
                                Margin="10,0"
                                VerticalAlignment="Center"
                                FontFamily="{StaticResource LatoBold}"
                                FontSize="14"
                                Foreground="{StaticResource ScheduleForegroundBrushKey}"
                                Text="Custom Items:" />
                            <!--  Manage Items Button  -->
                            <Button
                                Grid.Column="1"
                                Width="40"
                                Height="20"
                                Command="{Binding ManageItemsCommand}"
                                Content="{StaticResource FontAwesomeCogIcon}"
                                FontFamily="{StaticResource FontAwesomeSolid}"
                                FontSize="10"
                                Style="{StaticResource RegularButton}" />
                        </Grid>
                    </StackPanel>
                </Grid>
            </Border>

            <!--  Calendar/Schedule  -->
            <local:ScheduleCalendarControl
                x:Name="Calendar"
                Grid.Row="1"
                DataContext="{Binding SelectedTemplate}"
                Visibility="Collapsed" />

            <!--  Schedule Settings  -->
            <Border Grid.Row="2" Padding="10">
                <local:ScheduleSettingsControl x:Name="Settings" Visibility="Collapsed" />
            </Border>
        </Grid>
    </ScrollViewer>
</local:BasePage>
