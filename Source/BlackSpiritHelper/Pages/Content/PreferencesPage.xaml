<local:BasePage x:TypeArguments="core:PreferencesPageViewModel" x:Class="BlackSpiritHelper.PreferencesPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
      xmlns:local="clr-namespace:BlackSpiritHelper"
      xmlns:core="clr-namespace:BlackSpiritHelper.Core;assembly=BlackSpiritHelper.Core"
      mc:Ignorable="d" 
      d:DesignHeight="1000" d:DesignWidth="500"
      Title="PreferencesPage" >

    <ScrollViewer VerticalScrollBarVisibility="Auto" 
                  DataContext="{Binding ApplicationDataContent.PreferencesDesignModel,
                                Source={x:Static local:ViewModelLocator.Instance}}">

        <Border Padding="10">
            <Grid HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Width="400">

                <StackPanel TextBlock.TextAlignment="Center">

                    <!-- Form Title -->
                    <TextBlock Text="Preferences"
                               Style="{StaticResource FormTitle}" />

                    <!-- ================================================== -->
                    <!-- Form Subtitle - General -->
                    <TextBlock Text="General"
                               Style="{StaticResource FormSubtitle}"
                               Margin="0 0 0 30" />

                    <!-- Start the app on Startup -->
                    <CheckBox IsChecked="{Binding RunOnStartup}" Margin="0 0 0 30"
                              Command="{Binding RunOnStartUpCheckboxCommand}"
                              Content="Run the application when my computer starts."
                              HorizontalAlignment="Center"
                              Foreground="{StaticResource ForegroundBrushKey}"
                              IsEnabled="{Binding RunOnStartupFlag, Converter={local:BooleanInvertConverter}}" />

                    <!-- Run the app As Administrator -->
                    <CheckBox IsChecked="{Binding ForceToRunAsAdministrator}" Margin="0 0 0 30"
                              Command="{Binding ForceToRunAsAdministratorCommand}"
                              Content="Force to run the application As Administrator."
                              Foreground="{StaticResource ForegroundBrushKey}"
                              HorizontalAlignment="Center" />

                    <!-- Volume -->
                    <TextBlock Text="Volume"
                               FontFamily="{StaticResource LatoRegular}"
                               FontSize="14"
                               Foreground="{StaticResource ForegroundBrushKey}"
                               Margin="0 0 0 5"/>
                    <Grid Margin="0 0 0 30" HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="200" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" 
                                   Text="{StaticResource FontAwesomeVolumeOffIcon}"
                                   FontFamily="{StaticResource FontAwesomeSolid}"
                                   FontSize="20"
                                   Foreground="{StaticResource ForegroundBrushKey}"
                                   Margin="0 0 10 0"
                                   VerticalAlignment="Center"
                                   />
                        <Slider Grid.Column="1"
                                Minimum="0.0"
                                Maximum="1.0"
                                Value="{Binding Volume}"
                                VerticalAlignment="Center" />
                    </Grid>
                    
                    <!-- Audio Alert Level -->
                    <StackPanel Margin="0 0 0 30" HorizontalAlignment="Center">
                        <TextBlock Text="Audio Alert Level"
                                   FontFamily="{StaticResource LatoRegular}"
                                   FontSize="14"
                                   Foreground="{StaticResource ForegroundBrushKey}"
                                   Margin="0 0 0 5"/>
                        <ItemsControl ItemsSource="{Binding AudioAlertLevelList}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock Text="{Binding Converter={local:ObjectToStringConverter}}"
                                                   x:Name="RadioBindedKey"
                                                   Visibility="Collapsed" />
                                        <RadioButton GroupName="AudioAlerts"
                                                     Content="{Binding Converter={local:ObjectToStringConverter}}"
                                                     IsChecked="{Binding Path=DataContext.AudioAlertLevel,
                                                                 RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ScrollViewer}},
                                                                 Converter={local:RadioEnumBooleanConverter}, 
                                                                 ConverterParameter={x:Reference Name=RadioBindedKey}}"
                                                     >
                                        </RadioButton>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <TextBlock Text="Voice option is not implemented yet." 
                                   FontFamily="{StaticResource LatoLightItalic}"
                                   Foreground="{StaticResource ForegroundBrushKey}"
                                   FontSize="10"/>
                    </StackPanel>

                    <!-- Export log button -->
                    <Button Content="Export Log File" Margin="0 0 0 50"
                            Style="{StaticResource RegularButton}"
                            Command="{Binding ExportLogFileCommand}"
                            Padding="10"
                            HorizontalAlignment="Center" />

                    <!-- ================================================== -->
                    <!-- Form Subtitle - Overlay -->
                    <TextBlock Text="Overlay"
                               Style="{StaticResource FormSubtitle}"
                               Margin="0 0 0 30" />

                    <!-- Overlay Orientation -->
                    <StackPanel Margin="0 0 0 30" HorizontalAlignment="Center">
                        <TextBlock Text="Orientation"
                                   FontFamily="{StaticResource LatoRegular}"
                                   FontSize="14"
                                   Foreground="{StaticResource ForegroundBrushKey}"
                                   Margin="0 0 0 5"/>
                        <ItemsControl ItemsSource="{Binding ApplicationDataContent.OverlayDesignModel.OrientationList,
                                                    Source={x:Static local:ViewModelLocator.Instance}}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock Text="{Binding Converter={local:ObjectToStringConverter}}"
                                                   x:Name="RadioBindedKey"
                                                   Visibility="Collapsed" />
                                        <RadioButton GroupName="OverlayOrientation"
                                                     Content="{Binding Converter={local:ObjectToStringConverter}}"
                                                     IsChecked="{Binding ApplicationDataContent.OverlayDesignModel.OverlayOrientation,
                                                                 Source={x:Static local:ViewModelLocator.Instance},
                                                                 Converter={local:RadioEnumBooleanConverter}, 
                                                                 ConverterParameter={x:Reference Name=RadioBindedKey}}"
                                                     >
                                        </RadioButton>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>

                    <!-- Overlay Size -->
                    <StackPanel Margin="0 0 0 30" HorizontalAlignment="Center">
                        <TextBlock Text="Size"
                                   FontFamily="{StaticResource LatoRegular}"
                                   FontSize="14"
                                   Foreground="{StaticResource ForegroundBrushKey}"
                                   Margin="0 0 0 5"/>
                        <ItemsControl ItemsSource="{Binding ApplicationDataContent.OverlayDesignModel.OverlaySizeList,
                                                    Source={x:Static local:ViewModelLocator.Instance}}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock Text="{Binding Converter={local:ObjectToStringConverter}}"
                                                   x:Name="RadioBindedKey"
                                                   Visibility="Collapsed" />
                                        <RadioButton GroupName="OverlaySize"
                                                     Content="{Binding Converter={local:ObjectToStringConverter}}"
                                                     IsChecked="{Binding ApplicationDataContent.OverlayDesignModel.OverlaySize,
                                                                 Source={x:Static local:ViewModelLocator.Instance},
                                                                 Converter={local:RadioEnumBooleanConverter}, 
                                                                 ConverterParameter={x:Reference Name=RadioBindedKey}}"
                                                     >
                                        </RadioButton>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>

                    <!-- Reset overlay position -->
                    <Button Content="Reset Overlay Position" Margin="0 0 0 50"
                            Style="{StaticResource RegularButton}"
                            Command="{Binding ResetOverlayPositionCommand}"
                            Padding="10"
                            HorizontalAlignment="Center" />

                    <!-- ================================================== -->
                    <!-- Form Subtitle - Schedule -->
                    <TextBlock Text="Schedule"
                               Style="{StaticResource FormSubtitle}"
                               Margin="0 0 0 30" />

                    <!-- Schedule Notification Time Brackets -->
                    <TextBlock Text="Alerts"
                               FontFamily="{StaticResource LatoRegular}"
                               FontSize="14"
                               Foreground="{StaticResource ForegroundBrushKey}"
                               Margin="0 0 0 5"/>
                    <TextBlock Text="You cannot update this value if schedule runs." 
                               Visibility="{Binding ApplicationDataContent.ScheduleDesignModel.IsRunning,
                                            Source={x:Static local:ViewModelLocator.Instance},
                                            Converter={local:BooleanToVisibilityGoneConverter}}"
                               Foreground="{StaticResource RedBrushKey}"
                               FontFamily="{StaticResource LatoLight}"
                               FontSize="14"
                               HorizontalAlignment="Center" 
                               Margin="0 0 0 5"/>
                    <xctk:RangeSlider x:Name="ScheduleNotificationRangeSlider" Margin="0 0 0 5"
                                      Orientation="Horizontal"
                                      Minimum="1"
                                      LowerValue="{Binding ApplicationDataContent.ScheduleDesignModel.TimerNotificationTime2Value, 
                                                   Mode=TwoWay,
                                                   Source={x:Static local:ViewModelLocator.Instance}}" 
                                      Maximum="180"
                                      HigherValue="{Binding ApplicationDataContent.ScheduleDesignModel.TimerNotificationTime1Value, 
                                                    Mode=TwoWay,
                                                    Source={x:Static local:ViewModelLocator.Instance}}"
                                      Step="1" />
                    <Grid Margin="0 0 0 50">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" 
                                   Text="{Binding LowerValue, ElementName=ScheduleNotificationRangeSlider, StringFormat='2nd alert at {0:#} min.'}"
                                   FontFamily="{StaticResource LatoLight}"
                                   FontSize="14"
                                   Foreground="{StaticResource ForegroundBrushKey}"
                                   HorizontalAlignment="Left"/>
                        <TextBlock Grid.Column="2"
                                   Text="{Binding HigherValue, ElementName=ScheduleNotificationRangeSlider, StringFormat='1st alert at {0:#} min.'}"
                                   FontFamily="{StaticResource LatoLight}"
                                   FontSize="14"
                                   Foreground="{StaticResource ForegroundBrushKey}"
                                   HorizontalAlignment="Right"/>
                    </Grid>

                    <!-- ================================================== -->
                    <!-- Form Subtitle - Timer -->
                    <TextBlock Text="Timer"
                               Style="{StaticResource FormSubtitle}"
                               Margin="0 0 0 30" />

                    <!-- Timer Notification Time Brackets -->
                    <TextBlock Text="Alerts"
                                   FontFamily="{StaticResource LatoRegular}"
                                   FontSize="14"
                               Foreground="{StaticResource ForegroundBrushKey}"
                                   Margin="0 0 0 5"/>
                    <TextBlock Text="You cannot update this value if any timer runs." 
                               Visibility="{Binding ApplicationDataContent.TimerDesignModel.IsRunning,
                                            Source={x:Static local:ViewModelLocator.Instance},
                                            Converter={local:BooleanToVisibilityGoneConverter}}"
                               Foreground="{StaticResource RedBrushKey}"
                               FontFamily="{StaticResource LatoLight}"
                               FontSize="14"
                               HorizontalAlignment="Center" 
                               Margin="0 0 0 5"/>
                    <xctk:RangeSlider x:Name="TimerNotificationRangeSlider" Margin="0 0 0 5"
                                      Orientation="Horizontal"
                                      Minimum="6"
                                      LowerValue="{Binding ApplicationDataContent.TimerDesignModel.TimerNotificationTime2Value, 
                                                   Mode=TwoWay,
                                                   Source={x:Static local:ViewModelLocator.Instance}}" 
                                      Maximum="59"
                                      HigherValue="{Binding ApplicationDataContent.TimerDesignModel.TimerNotificationTime1Value, 
                                                    Mode=TwoWay,
                                                    Source={x:Static local:ViewModelLocator.Instance}}"
                                      Step="1" />
                    <Grid Margin="0 0 0 50">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" 
                                   Text="{Binding LowerValue, ElementName=TimerNotificationRangeSlider, StringFormat='2nd alert at {0:#} sec.'}"
                                   FontFamily="{StaticResource LatoLight}"
                                   FontSize="14"
                                   Foreground="{StaticResource ForegroundBrushKey}"
                                   HorizontalAlignment="Left"/>
                        <TextBlock Grid.Column="2"
                                   Text="{Binding HigherValue, ElementName=TimerNotificationRangeSlider, StringFormat='1st alert at {0:#} sec.'}"
                                   FontFamily="{StaticResource LatoLight}"
                                   FontSize="14"
                                   Foreground="{StaticResource ForegroundBrushKey}"
                                   HorizontalAlignment="Right"/>
                    </Grid>

                </StackPanel>

            </Grid>
        </Border>
    </ScrollViewer>

</local:BasePage>
