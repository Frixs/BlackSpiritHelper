<local:BasePage
    x:Class="BlackSpiritHelper.PreferencesPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:BlackSpiritHelper.Core;assembly=BlackSpiritHelper.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:BlackSpiritHelper"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    Title="PreferencesPage"
    d:DesignHeight="1920"
    d:DesignWidth="500"
    x:TypeArguments="core:PreferencesPageViewModel"
    mc:Ignorable="d">

    <ScrollViewer
        d:DesignStyle="{StaticResource WindowBackgroundControlStyle}"
        DataContext="{Binding ApplicationDataContent.PreferencesData, Source={x:Static local:ViewModelLocator.Instance}}"
        VerticalScrollBarVisibility="Auto">

        <Border Padding="10">
            <Grid
                Width="400"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">

                <!--  Form  -->
                <StackPanel TextBlock.TextAlignment="Center">

                    <!--  Form Title  -->
                    <TextBlock Style="{StaticResource FormTitle}" Text="Preferences" />

                    <!--  ==================================================  -->
                    <!--  Form Subtitle - General  -->
                    <TextBlock Style="{StaticResource FormSubtitle}" Text="General" />

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormInputVerSpacer}" />

                    <!--  Start the app on Startup  -->
                    <CheckBox
                        HorizontalAlignment="Center"
                        Command="{Binding RunOnStartUpCheckboxCommand}"
                        Content="Run the application when my computer starts."
                        Foreground="{StaticResource ForegroundBrushKey}"
                        IsChecked="{Binding RunOnStartup}"
                        IsEnabled="{Binding RunOnStartupFlag, Converter={local:BooleanInvertConverter}}" />

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormItemSpacer}" />

                    <!--  Run the app As Administrator  -->
                    <CheckBox
                        HorizontalAlignment="Center"
                        Command="{Binding ForceToRunAsAdministratorCommand}"
                        Content="Force to run the application As Administrator."
                        Foreground="{StaticResource ForegroundBrushKey}"
                        IsChecked="{Binding ForceToRunAsAdministrator}" />

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormItemSpacer}" />

                    <!--  Start application in tray  -->
                    <CheckBox
                        HorizontalAlignment="Center"
                        Content="Start the application in tray."
                        Foreground="{StaticResource ForegroundBrushKey}"
                        IsChecked="{Binding StartInTray}" />

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormItemSpacer}" />

                    <!--  Do not open overlay on application start  -->
                    <CheckBox
                        HorizontalAlignment="Center"
                        Content="Allow opening the overlay on application start."
                        Foreground="{StaticResource ForegroundBrushKey}"
                        IsChecked="{Binding ApplicationDataContent.OverlayData.AllowOpenOnStart, Source={x:Static local:ViewModelLocator.Instance}}" />

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormItemSpacer}" />

                    <!--  Volume  -->
                    <TextBlock
                        Margin="0,0,0,5"
                        FontFamily="{StaticResource LatoRegular}"
                        FontSize="14"
                        Foreground="{StaticResource ForegroundBrushKey}"
                        Text="Volume" />
                    <Grid HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="200" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Column="0"
                            Margin="0,0,10,0"
                            VerticalAlignment="Center"
                            FontFamily="{StaticResource FontAwesomeSolid}"
                            FontSize="20"
                            Foreground="{StaticResource ForegroundBrushKey}"
                            Text="{StaticResource FontAwesomeVolumeOffIcon}" />
                        <Slider
                            Grid.Column="1"
                            VerticalAlignment="Center"
                            IsSnapToTickEnabled="True"
                            Maximum="1.0"
                            Minimum="0.0"
                            TickFrequency="0.05"
                            Value="{Binding Volume}" />
                    </Grid>

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormItemSpacer}" />

                    <!--  Audio Alert Level  -->
                    <StackPanel HorizontalAlignment="Center">
                        <TextBlock
                            Margin="0,0,0,5"
                            FontFamily="{StaticResource LatoRegular}"
                            FontSize="14"
                            Foreground="{StaticResource ForegroundBrushKey}"
                            Text="Audio Alert" />
                        <ItemsControl ItemsSource="{Binding AudioAlertTypeList}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock
                                            x:Name="RadioBindedKey"
                                            Text="{Binding Converter={local:ObjectToStringConverter}}"
                                            Visibility="Collapsed" />
                                        <RadioButton
                                            Content="{Binding Converter={local:ObjectToStringConverter}}"
                                            GroupName="AudioAlerts"
                                            IsChecked="{Binding Path=DataContext.AudioAlertType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ScrollViewer}}, Converter={local:RadioEnumBooleanConverter}, ConverterParameter={x:Reference Name=RadioBindedKey}}" />
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormInputVerSpacer}" />
                    <Border Style="{StaticResource LineSeparator}" />
                    <Border Style="{StaticResource FormInputVerSpacer}" />

                    <!--  Export log button  -->
                    <Button
                        Padding="10"
                        HorizontalAlignment="Center"
                        Command="{Binding ExportLogFileCommand}"
                        Content="EXPORT LOG FILE"
                        Style="{StaticResource RegularButton}" />

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormSectionSpacer}" />

                    <!--  ==================================================  -->
                    <!--  Form Subtitle - Connection  -->
                    <TextBlock Style="{StaticResource FormSubtitle}" Text="Connection" />

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormInputVerSpacer}" />

                    <!--  Connection Wrapper  -->
                    <local:PreferencesConnectionControl DataContext="{Binding Connection}" />

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormSectionSpacer}" />

                    <!--  ==================================================  -->
                    <!--  Form Subtitle - Overlay  -->
                    <TextBlock Style="{StaticResource FormSubtitle}" Text="Overlay" />

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormInputVerSpacer}" />

                    <!--  Overlay Orientation  -->
                    <StackPanel HorizontalAlignment="Center">
                        <TextBlock
                            Margin="0,0,0,5"
                            FontFamily="{StaticResource LatoRegular}"
                            FontSize="14"
                            Foreground="{StaticResource ForegroundBrushKey}"
                            Text="Orientation" />
                        <ItemsControl ItemsSource="{Binding ApplicationDataContent.OverlayData.OrientationList, Source={x:Static local:ViewModelLocator.Instance}}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock
                                            x:Name="RadioBindedKey"
                                            Text="{Binding Converter={local:ObjectToStringConverter}}"
                                            Visibility="Collapsed" />
                                        <RadioButton
                                            Content="{Binding Converter={local:ObjectToStringConverter}}"
                                            GroupName="BaseOverlayOrientation"
                                            IsChecked="{Binding ApplicationDataContent.OverlayData.BaseOverlay.OverlayOrientation, Source={x:Static local:ViewModelLocator.Instance}, Converter={local:RadioEnumBooleanConverter}, ConverterParameter={x:Reference Name=RadioBindedKey}}" />
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormItemSpacer}" />

                    <!--  Base Overlay Size  -->
                    <StackPanel HorizontalAlignment="Center">
                        <TextBlock
                            Margin="0,0,0,5"
                            FontFamily="{StaticResource LatoRegular}"
                            FontSize="14"
                            Foreground="{StaticResource ForegroundBrushKey}"
                            Text="Size" />
                        <ItemsControl ItemsSource="{Binding ApplicationDataContent.OverlayData.BaseOverlaySizeList, Source={x:Static local:ViewModelLocator.Instance}}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock
                                            x:Name="RadioBindedKey"
                                            Text="{Binding Converter={local:ObjectToStringConverter}}"
                                            Visibility="Collapsed" />
                                        <RadioButton
                                            Content="{Binding Converter={local:ObjectToStringConverter}}"
                                            GroupName="BaseOverlaySize"
                                            IsChecked="{Binding ApplicationDataContent.OverlayData.BaseOverlay.Size, Source={x:Static local:ViewModelLocator.Instance}, Converter={local:RadioEnumBooleanConverter}, ConverterParameter={x:Reference Name=RadioBindedKey}}" />
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormItemSpacer}" />

                    <!--  Screen Capture Scale  -->
                    <TextBlock
                        Margin="0,0,0,5"
                        FontFamily="{StaticResource LatoRegular}"
                        FontSize="14"
                        Foreground="{StaticResource ForegroundBrushKey}"
                        Text="Screen Display Scale" />
                    <Grid HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="200" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Column="0"
                            Width="40"
                            Margin="0,0,10,0"
                            VerticalAlignment="Center"
                            FontFamily="{StaticResource LatoLight}"
                            FontSize="14"
                            Foreground="{StaticResource ForegroundBrushKey}"
                            Text="{Binding ApplicationDataContent.OverlayData.ScreenCaptureOverlay.Scale, Source={x:Static local:ViewModelLocator.Instance}, Converter={local:MultiplyConverter}, ConverterParameter=100, StringFormat={}{0}%}" />
                        <Slider
                            Grid.Column="1"
                            VerticalAlignment="Center"
                            IsSnapToTickEnabled="True"
                            Maximum="{Binding ApplicationDataContent.OverlayData.ScreenCaptureOverlay.LimitScale_Max, Mode=OneTime, Source={x:Static local:ViewModelLocator.Instance}}"
                            Minimum="{Binding ApplicationDataContent.OverlayData.ScreenCaptureOverlay.LimitScale_Min, Mode=OneTime, Source={x:Static local:ViewModelLocator.Instance}}"
                            TickFrequency="0.01"
                            Value="{Binding ApplicationDataContent.OverlayData.ScreenCaptureOverlay.Scale, Source={x:Static local:ViewModelLocator.Instance}}" />
                    </Grid>

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormItemSpacer}" />

                    <!--  Screen Capture Opacity  -->
                    <TextBlock
                        Margin="0,0,0,5"
                        FontFamily="{StaticResource LatoRegular}"
                        FontSize="14"
                        Foreground="{StaticResource ForegroundBrushKey}"
                        Text="Screen Display Opacity" />
                    <Grid HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="200" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Column="0"
                            Width="40"
                            Margin="0,0,10,0"
                            VerticalAlignment="Center"
                            FontFamily="{StaticResource LatoLight}"
                            FontSize="14"
                            Foreground="{StaticResource ForegroundBrushKey}"
                            Text="{Binding ApplicationDataContent.OverlayData.ScreenCaptureOverlay.Opacity, Source={x:Static local:ViewModelLocator.Instance}, Converter={local:MultiplyConverter}, ConverterParameter=100, StringFormat={}{0}%}" />
                        <Slider
                            Grid.Column="1"
                            VerticalAlignment="Center"
                            IsSnapToTickEnabled="True"
                            Maximum="{Binding ApplicationDataContent.OverlayData.ScreenCaptureOverlay.LimitOpacity_Max, Mode=OneTime, Source={x:Static local:ViewModelLocator.Instance}}"
                            Minimum="{Binding ApplicationDataContent.OverlayData.ScreenCaptureOverlay.LimitOpacity_Min, Mode=OneTime, Source={x:Static local:ViewModelLocator.Instance}}"
                            TickFrequency="0.01"
                            Value="{Binding ApplicationDataContent.OverlayData.ScreenCaptureOverlay.Opacity, Source={x:Static local:ViewModelLocator.Instance}}" />
                    </Grid>

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormItemSpacer}" />

                    <!--  Change Group  -->
                    <TextBlock
                        Margin="0,0,0,5"
                        FontFamily="{StaticResource LatoRegular}"
                        FontSize="14"
                        Foreground="{StaticResource ForegroundBrushKey}"
                        Text="Interaction Hotkey" />
                    <ComboBox
                        HorizontalAlignment="Center"
                        ItemsSource="{Binding OverlayInteractionKeyList}"
                        SelectionChanged="ComboBox_SelectionChanged">
                        <ComboBox.SelectedItem>
                            <Binding Path="OverlayInteractionHotkey" UpdateSourceTrigger="PropertyChanged" />
                        </ComboBox.SelectedItem>
                    </ComboBox>

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormItemSpacer}" />

                    <!--  Reset overlay position  -->
                    <Button
                        Padding="10"
                        HorizontalAlignment="Center"
                        Command="{Binding ResetOverlayPositionCommand}"
                        Content="RESET OVERLAY POSITION"
                        Style="{StaticResource RegularButton}" />

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormSectionSpacer}" />

                    <!--  ==================================================  -->
                    <!--  Form Subtitle - APM  -->
                    <TextBlock Style="{StaticResource FormSubtitle}" Text="APM" />

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormInputVerSpacer}" />

                    <!--  Set APM start/stop keybind  -->
                    <TextBlock
                        Margin="0,0,0,5"
                        FontFamily="{StaticResource LatoRegular}"
                        FontSize="14"
                        Foreground="{StaticResource ForegroundBrushKey}"
                        Text="Control Hotkey" />
                    <Button
                        MinWidth="55"
                        Padding="7,3.5,7,2.5"
                        HorizontalAlignment="Center"
                        Command="{Binding SetHotkeyApmCalculatorControlCommand}"
                        FontSize="12">
                        <Button.Style>
                            <Style BasedOn="{StaticResource RegularButtonYellow}" TargetType="{x:Type Button}">
                                <Setter Property="Content" Value="{Binding ApmCalculatorControlHotkey}" />
                                <Setter Property="FontFamily" Value="{StaticResource LatoHeavy}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ApmCalculatorControlHotkey}" Value="{x:Null}">
                                        <Setter Property="Content" Value="NONE" />
                                        <Setter Property="FontFamily" Value="{StaticResource LatoHeavyItalic}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SetHotkeyApmCalculatorControlCommandFlag}" Value="True">
                                        <Setter Property="Content" Value="PRESS ANY KEY" />
                                        <Setter Property="FontFamily" Value="{StaticResource LatoHeavyItalic}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormSectionSpacer}" />

                    <!--  ==================================================  -->
                    <!--  Form Subtitle - Schedule  -->
                    <TextBlock Style="{StaticResource FormSubtitle}" Text="Schedule" />

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormInputVerSpacer}" />

                    <!--  Schedule Notification Time Brackets  -->
                    <TextBlock
                        Margin="0,0,0,5"
                        FontFamily="{StaticResource LatoRegular}"
                        FontSize="14"
                        Foreground="{StaticResource ForegroundBrushKey}"
                        Text="Alerts" />
                    <TextBlock
                        Margin="0,0,0,5"
                        HorizontalAlignment="Center"
                        FontFamily="{StaticResource LatoLight}"
                        FontSize="14"
                        Foreground="{StaticResource RedBrushKey}"
                        Text="You cannot update this value if the schedule is running."
                        Visibility="{Binding ApplicationDataContent.ScheduleData.IsRunning, Source={x:Static local:ViewModelLocator.Instance}, Converter={local:BooleanToVisibilityGoneConverter}}" />
                    <xctk:RangeSlider
                        x:Name="ScheduleNotificationRangeSlider"
                        Margin="0,0,0,5"
                        HigherValue="{Binding ApplicationDataContent.ScheduleData.TimerNotificationTime1Value, Mode=TwoWay, Source={x:Static local:ViewModelLocator.Instance}}"
                        IsEnabled="{Binding ApplicationDataContent.ScheduleData.IsRunning, Source={x:Static local:ViewModelLocator.Instance}, Converter={local:BooleanInvertConverter}}"
                        LowerValue="{Binding ApplicationDataContent.ScheduleData.TimerNotificationTime2Value, Mode=TwoWay, Source={x:Static local:ViewModelLocator.Instance}}"
                        Maximum="180"
                        Minimum="1"
                        Orientation="Horizontal"
                        Step="1" />
                    <!--  Schedule Notification Time Bracket label wrapper  -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Column="0"
                            HorizontalAlignment="Left"
                            FontFamily="{StaticResource LatoLight}"
                            FontSize="14"
                            Foreground="{StaticResource ForegroundBrushKey}"
                            Text="{Binding LowerValue, ElementName=ScheduleNotificationRangeSlider, StringFormat='2nd alert at {0:#} min.'}" />
                        <TextBlock
                            Grid.Column="2"
                            HorizontalAlignment="Right"
                            FontFamily="{StaticResource LatoLight}"
                            FontSize="14"
                            Foreground="{StaticResource ForegroundBrushKey}"
                            Text="{Binding HigherValue, ElementName=ScheduleNotificationRangeSlider, StringFormat='1st alert at {0:#} min.'}" />
                    </Grid>

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormSectionSpacer}" />

                    <!--  ==================================================  -->
                    <!--  Form Subtitle - Timer  -->
                    <TextBlock Style="{StaticResource FormSubtitle}" Text="Timer" />

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormInputVerSpacer}" />

                    <!--  Timer Notification Time Brackets  -->
                    <TextBlock
                        Margin="0,0,0,5"
                        FontFamily="{StaticResource LatoRegular}"
                        FontSize="14"
                        Foreground="{StaticResource ForegroundBrushKey}"
                        Text="Alerts" />
                    <TextBlock
                        Margin="0,0,0,5"
                        HorizontalAlignment="Center"
                        FontFamily="{StaticResource LatoLight}"
                        FontSize="14"
                        Foreground="{StaticResource RedBrushKey}"
                        Text="You cannot update this value if any of the existing timers are running."
                        Visibility="{Binding ApplicationDataContent.TimerData.IsRunning, Source={x:Static local:ViewModelLocator.Instance}, Converter={local:BooleanToVisibilityGoneConverter}}" />
                    <xctk:RangeSlider
                        x:Name="TimerNotificationRangeSlider"
                        Margin="0,0,0,5"
                        HigherValue="{Binding ApplicationDataContent.TimerData.TimerNotificationTime1Value, Mode=TwoWay, Source={x:Static local:ViewModelLocator.Instance}}"
                        IsEnabled="{Binding ApplicationDataContent.TimerData.IsRunning, Source={x:Static local:ViewModelLocator.Instance}, Converter={local:BooleanInvertConverter}}"
                        LowerValue="{Binding ApplicationDataContent.TimerData.TimerNotificationTime2Value, Mode=TwoWay, Source={x:Static local:ViewModelLocator.Instance}}"
                        Maximum="59"
                        Minimum="6"
                        Orientation="Horizontal"
                        Step="1" />
                    <!--  Timer Notification Time Bracket label wrapper  -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Column="0"
                            HorizontalAlignment="Left"
                            FontFamily="{StaticResource LatoLight}"
                            FontSize="14"
                            Foreground="{StaticResource ForegroundBrushKey}"
                            Text="{Binding LowerValue, ElementName=TimerNotificationRangeSlider, StringFormat='2nd alert at {0:#} sec.'}" />
                        <TextBlock
                            Grid.Column="2"
                            HorizontalAlignment="Right"
                            FontFamily="{StaticResource LatoLight}"
                            FontSize="14"
                            Foreground="{StaticResource ForegroundBrushKey}"
                            Text="{Binding HigherValue, ElementName=TimerNotificationRangeSlider, StringFormat='1st alert at {0:#} sec.'}" />
                    </Grid>

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormSectionSpacer}" />

                    <!--  Installation Directory  -->
                    <TextBlock
                        Margin="0"
                        FontFamily="{StaticResource LatoRegular}"
                        FontSize="12"
                        Foreground="{StaticResource ForegroundLightBrushKey}"
                        Text="Installation Directory" />
                    <TextBox
                        Margin="0"
                        Padding="5,0,5,5"
                        Background="Transparent"
                        BorderThickness="0"
                        FontSize="10"
                        Foreground="{StaticResource ForegroundLightBrushKey}"
                        IsReadOnly="True"
                        Text="{Binding InstallationDirectory, Mode=OneTime}" />
                    <!--  Data Directory  -->
                    <TextBlock
                        Margin="0"
                        FontFamily="{StaticResource LatoRegular}"
                        FontSize="12"
                        Foreground="{StaticResource ForegroundLightBrushKey}"
                        Text="Data Directory" />
                    <TextBox
                        Margin="0"
                        Padding="5,0,5,5"
                        Background="Transparent"
                        BorderThickness="0"
                        FontSize="10"
                        Foreground="{StaticResource ForegroundLightBrushKey}"
                        IsReadOnly="True"
                        Text="{Binding DataDirectory, Mode=OneTime}" />

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormInputVerSpacer}" />
                </StackPanel>

            </Grid>
        </Border>
    </ScrollViewer>

</local:BasePage>
