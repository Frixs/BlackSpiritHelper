<local:BasePage x:TypeArguments="core:TimerItemSettingsFormPageViewModel" x:Class="BlackSpiritHelper.TimerItemSettingsFormPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
      xmlns:system="clr-namespace:System;assembly=mscorlib"
      xmlns:local="clr-namespace:BlackSpiritHelper"
      xmlns:core="clr-namespace:BlackSpiritHelper.Core;assembly=BlackSpiritHelper.Core"
      mc:Ignorable="d" 
      d:DesignHeight="600" d:DesignWidth="500"
      Title="TimerItemSettingsFormPage">

    <ScrollViewer VerticalScrollBarVisibility="Auto" d:DesignStyle="{StaticResource WindowBackgroundControlStyle}">

        <Border Padding="10">
            <Grid HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Width="400">

                <!-- Go Back Button -->
                <Button Content="{StaticResource FontAwesomeArrowLeftIcon}"
                        Command="{Binding GoBackCommand}"
                        Style="{StaticResource RegularButtonLight}" 
                        FontFamily="{StaticResource FontAwesomeSolid}"
                        Width="30"
                        Height="30"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Panel.ZIndex="1"
                        />

                <!-- Form -->
                <StackPanel TextBlock.TextAlignment="Center">

                    <!-- Form Title -->
                    <TextBlock Text="Settings"
                               Style="{StaticResource FormTitle}" />

                    <!-- Form Subtitle -->
                    <TextBlock Text="Timer"
                               Style="{StaticResource FormSubtitle}" />

                    <!-- Spacer -->
                    <Border Style="{StaticResource FormSectionSpacer}" />

                    <!-- Timer Title -->
                    <TextBox Tag="Title"
                             MaxLength="{Binding TimerItemDataViewModel.TitleAllowMaxChar}">
                        <TextBox.Text>
                            <Binding Path="Title"
                                     UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <core:TimerTitleRule ValidationStep="UpdatedValue" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <!-- Spacer -->
                    <Border Style="{StaticResource FormInputVerSpacer}" />

                    <!-- Shortcut & Color wrapper -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="2*" />
                        </Grid.ColumnDefinitions>

                        <!-- Icon Timer Shortcut -->
                        <TextBox Tag="Icon Shortcut" Margin="0 0 5 0" Grid.Column="0"
                                 MaxLength="{Binding TimerItemDataViewModel.IconTitleAllowMaxChar}"
                                 >
                            <TextBox.Text>
                                <Binding Path="IconTitleShortcut" 
                                         UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <core:TimerIconTitleShortcutRule ValidationStep="UpdatedValue" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <!-- Icon Timer Color Picker -->
                        <xctk:ColorPicker Margin="5 0 0 0" Grid.Column="1"
                                          SelectedColor="{Binding IconBackgroundHEX}"
                                          ColorMode="ColorCanvas"
                                          ShowDropDownButton="False"
                                          UsingAlphaChannel="False"
                                          ShowAvailableColors="False"
                                          ShowStandardColors="False"
                                          StandardButtonHeader=""
                                          >
                        </xctk:ColorPicker>
                    </Grid>

                    <!-- Spacer -->
                    <Border Style="{StaticResource FormInputVerSpacer}" />

                    <!-- Timer Total Time -->
                    <xctk:TimeSpanUpDown AllowTextInput="True"
                                         DefaultValue="00:01:00"
                                         Minimum="00:01:00"
                                         Maximum="2:00:00:00"
                                         Padding="6"
                                         FontSize="20"
                                         TextAlignment="Center">
                        <xctk:TimeSpanUpDown.Value>
                            <Binding Path="TimeDuration"
                                     UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <core:TimerTimeDurationRule ValidationStep="UpdatedValue" />
                                </Binding.ValidationRules>
                            </Binding>
                        </xctk:TimeSpanUpDown.Value>
                    </xctk:TimeSpanUpDown>

                    <!-- Spacer -->
                    <Border Style="{StaticResource FormItemSpacer}" />

                    <!-- Timer Start Countdown -->
                    <TextBlock Text="Start Countdown"
                               FontFamily="{StaticResource LatoRegular}"
                               FontSize="14"
                               Foreground="{StaticResource ForegroundBrushKey}"
                               Margin="0 0 0 5"/>
                    <DockPanel VerticalAlignment="Center">
                        <xctk:TimeSpanUpDown Margin="10 0 0 0"
                                             AllowTextInput="True"
                                             DefaultValue="00:00:00"
                                             Minimum="00:00:00"
                                             Maximum="02:00:00"
                                             Value="{Binding ElementName=slValue, 
                                                   Path=Value, 
                                                   UpdateSourceTrigger=PropertyChanged,
                                                   Converter={local:SecondsToTimeFormatStringConverter}}" 
                                             DockPanel.Dock="Right" 
                                             TextAlignment="Right" 
                                             Width="100" />
                        <Slider Maximum="7200" TickPlacement="BottomRight" Name="slValue"
                                TickFrequency="60" 
                                IsSnapToTickEnabled="True">
                            <Slider.Value>
                                <Binding Path="CountdownDuration"
                                         UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <core:TimerCountdownDurationRule ValidationStep="UpdatedValue" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </Slider.Value>
                        </Slider>
                    </DockPanel>

                    <!-- Spacer -->
                    <Border Style="{StaticResource FormItemSpacer}" />

                    <!-- Auto repeat & show in overlay wrapper -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="2*" />
                        </Grid.ColumnDefinitions>

                        <!-- Timer Has Loop -->
                        <StackPanel Grid.Column="0" Orientation="Vertical">
                            <TextBlock Text="Auto Repeat (Loop)"
                                       FontFamily="{StaticResource FontAwesomeRegular}"
                                       Foreground="{StaticResource ForegroundBrushKey}"
                                       FontSize="14"
                                       Margin="0 0 0 5"/>
                            <CheckBox IsChecked="{Binding IsLoopActive}"
                                      HorizontalAlignment="Center"/>
                        </StackPanel>
                        <!-- Show On Overlay -->
                        <StackPanel Grid.Column="1" Orientation="Vertical">
                            <TextBlock Text="Show In Overlay" Grid.Column="1"
                                       FontFamily="{StaticResource LatoRegular}"
                                       Foreground="{StaticResource ForegroundBrushKey}"
                                       FontSize="14"
                                       Margin="0 0 0 5"/>
                            <CheckBox x:Name="ShowInOverlayCheckBox" 
                                      HorizontalAlignment="Center"
                                      Tag="{Binding TimerItemDataViewModel.ShowInOverlay}"
                                      >
                                <CheckBox.IsChecked>
                                    <Binding Path="ShowInOverlay"
                                             UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <core:TimerShowInOverlayRule ValidationStep="UpdatedValue"
                                                                         x:Name="ShowInOverlayCheckBoxRule" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </CheckBox.IsChecked>
                            </CheckBox>
                        </StackPanel>
                    </Grid>

                    <!-- Spacer -->
                    <Border Style="{StaticResource FormItemSpacer}" />

                    <!-- Change Group -->
                    <TextBlock Text="Change Associated Group"
                               FontFamily="{StaticResource LatoRegular}"
                               Foreground="{StaticResource ForegroundBrushKey}"
                               FontSize="14"
                               Margin="0 0 0 5"/>
                    <ComboBox Name="GroupChangeComboBox"
                              HorizontalAlignment="Center"
                              Tag="{Binding GroupID}">
                        <ComboBox.SelectedItem>
                            <Binding Path="AssociatedGroupViewModel"
                                     UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <core:TimerAssociatedGroupViewModelRule ValidationStep="UpdatedValue"
                                                                            x:Name="GroupChangeComboBoxRule" />
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.SelectedItem>
                    </ComboBox>

                    <!-- Spacer -->
                    <Border Style="{StaticResource FormSectionSpacer}" />

                    <!-- Save Changes Button -->
                    <Button Content="SAVE CHANGES"
                            Command="{Binding SaveChangesCommand}"
                            Style="{StaticResource RegularButton}"
                            Padding="10"/>

                    <!-- Line separator -->
                    <Border Style="{StaticResource LineSeparator}"/>

                    <!-- Delete Timer Button -->
                    <Button Content="Delete Timer"
                            Style="{StaticResource RegularTextButtonRed}"
                            Command="{Binding DeleteTimerCommand}"/>

                </StackPanel>

            </Grid>
        </Border>

    </ScrollViewer>
</local:BasePage>
