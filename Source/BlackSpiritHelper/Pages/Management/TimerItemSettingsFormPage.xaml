<local:BasePage
    x:Class="BlackSpiritHelper.TimerItemSettingsFormPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:BlackSpiritHelper.Core;assembly=BlackSpiritHelper.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:BlackSpiritHelper"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    Title="TimerItemSettingsFormPage"
    d:DesignHeight="600"
    d:DesignWidth="500"
    x:TypeArguments="core:TimerItemSettingsFormPageViewModel"
    mc:Ignorable="d">

    <ScrollViewer d:DesignStyle="{StaticResource WindowBackgroundControlStyle}" VerticalScrollBarVisibility="Auto">

        <Border Padding="10">
            <Grid
                Width="400"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">

                <!--  Go Back Button  -->
                <Button
                    Width="30"
                    Height="30"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Panel.ZIndex="1"
                    Command="{Binding GoBackCommand}"
                    Content="{StaticResource FontAwesomeArrowLeftIcon}"
                    FontFamily="{StaticResource FontAwesomeSolid}"
                    Style="{StaticResource RegularButtonLight}" />

                <!--  Form  -->
                <StackPanel TextBlock.TextAlignment="Center">

                    <!--  Form Title  -->
                    <TextBlock Style="{StaticResource FormTitle}" Text="Settings" />

                    <!--  Form Subtitle  -->
                    <TextBlock Style="{StaticResource FormSubtitle}" Text="Timer" />

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormSectionSpacer}" />

                    <!--  Timer Title  -->
                    <TextBox MaxLength="{Binding FormVM.TitleAllowMaxChar}" Tag="Title">
                        <TextBox.Text>
                            <Binding Path="Title" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <core:TimerTitleRule ValidationStep="UpdatedValue" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormInputVerSpacer}" />

                    <!--  Shortcut & Color wrapper  -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="2*" />
                        </Grid.ColumnDefinitions>

                        <!--  Icon Timer Shortcut  -->
                        <TextBox
                            Grid.Column="0"
                            Margin="0,0,5,0"
                            MaxLength="{Binding FormVM.IconTitleAllowMaxChar}"
                            Tag="Icon Shortcut">
                            <TextBox.Text>
                                <Binding Path="IconTitleShortcut" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <core:TimerIconTitleShortcutRule ValidationStep="UpdatedValue" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <!--  Icon Timer Color Picker  -->
                        <xctk:ColorPicker
                            Grid.Column="1"
                            Margin="5,0,0,0"
                            ColorMode="ColorCanvas"
                            SelectedColor="{Binding IconBackgroundHEX}"
                            ShowAvailableColors="False"
                            ShowDropDownButton="False"
                            ShowStandardColors="False"
                            ShowTabHeaders="False"
                            UsingAlphaChannel="False" />
                    </Grid>

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormInputVerSpacer}" />

                    <!--  Timer Total Time  -->
                    <xctk:TimeSpanUpDown
                        Padding="6"
                        AllowTextInput="True"
                        DefaultValue="00:01:00"
                        FontSize="20"
                        Maximum="2:00:00:00"
                        Minimum="00:01:00"
                        TextAlignment="Center">
                        <xctk:TimeSpanUpDown.Value>
                            <Binding Path="TimeDuration" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <core:TimerTimeDurationRule ValidationStep="UpdatedValue" />
                                </Binding.ValidationRules>
                            </Binding>
                        </xctk:TimeSpanUpDown.Value>
                    </xctk:TimeSpanUpDown>

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormItemSpacer}" />

                    <!--  Timer Start Countdown  -->
                    <TextBlock
                        Margin="0,0,0,5"
                        FontFamily="{StaticResource LatoRegular}"
                        FontSize="14"
                        Foreground="{StaticResource ForegroundBrushKey}"
                        Text="Start Countdown" />
                    <DockPanel VerticalAlignment="Center">
                        <xctk:TimeSpanUpDown
                            Width="100"
                            Margin="10,0,0,0"
                            AllowTextInput="True"
                            DefaultValue="00:00:00"
                            DockPanel.Dock="Right"
                            Maximum="02:00:00"
                            Minimum="00:00:00"
                            TextAlignment="Right"
                            Value="{Binding ElementName=slValue, Path=Value, UpdateSourceTrigger=PropertyChanged, Converter={local:SecondsToTimeFormatStringConverter}}" />
                        <Slider
                            Name="slValue"
                            IsSnapToTickEnabled="True"
                            Maximum="7200"
                            TickFrequency="60"
                            TickPlacement="BottomRight">
                            <Slider.Value>
                                <Binding Path="CountdownDuration" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <core:TimerCountdownDurationRule ValidationStep="UpdatedValue" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </Slider.Value>
                        </Slider>
                    </DockPanel>

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormItemSpacer}" />

                    <!--  Auto repeat & show in overlay wrapper  -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="2*" />
                        </Grid.ColumnDefinitions>

                        <!--  Timer Has Loop  -->
                        <StackPanel Grid.Column="0" Orientation="Vertical">
                            <TextBlock
                                Margin="0,0,0,5"
                                FontFamily="{StaticResource FontAwesomeRegular}"
                                FontSize="14"
                                Foreground="{StaticResource ForegroundBrushKey}"
                                Text="Auto Repeat (Loop)" />
                            <CheckBox HorizontalAlignment="Center" IsChecked="{Binding IsLoopActive}" />
                        </StackPanel>
                        <!--  Show On Overlay  -->
                        <StackPanel Grid.Column="1" Orientation="Vertical">
                            <TextBlock
                                Grid.Column="1"
                                Margin="0,0,0,5"
                                FontFamily="{StaticResource LatoRegular}"
                                FontSize="14"
                                Foreground="{StaticResource ForegroundBrushKey}"
                                Text="Show In Overlay" />
                            <CheckBox
                                x:Name="ShowInOverlayCheckBox"
                                HorizontalAlignment="Center"
                                Tag="{Binding FormVM.ShowInOverlay}">
                                <CheckBox.IsChecked>
                                    <Binding Path="ShowInOverlay" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <core:TimerShowInOverlayRule x:Name="ShowInOverlayCheckBoxRule" ValidationStep="UpdatedValue" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </CheckBox.IsChecked>
                            </CheckBox>
                            <!--  Already full indicator  -->
                            <TextBlock
                                Margin="0,5,0,0"
                                HorizontalAlignment="Center"
                                FontFamily="{StaticResource LatoLight}"
                                FontSize="14"
                                Foreground="{StaticResource RedBrushKey}"
                                Text="Overlay is already full!">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=ShowInOverlayCheckBox, Path=ToolTip}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </Grid>

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormItemSpacer}" />

                    <!--  Change Group  -->
                    <TextBlock
                        Margin="0,0,0,5"
                        FontFamily="{StaticResource LatoRegular}"
                        FontSize="14"
                        Foreground="{StaticResource ForegroundBrushKey}"
                        Text="Change Associated Group" />
                    <ComboBox
                        Name="GroupChangeComboBox"
                        HorizontalAlignment="Center"
                        Tag="{Binding GroupID}">
                        <ComboBox.SelectedItem>
                            <Binding Path="AssociatedGroupViewModel" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <core:TimerAssociatedGroupViewModelRule x:Name="GroupChangeComboBoxRule" ValidationStep="UpdatedValue" />
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.SelectedItem>
                    </ComboBox>

                    <!--  Spacer  -->
                    <Border Style="{StaticResource FormSectionSpacer}" />

                    <!--  Save Changes Button  -->
                    <Button
                        Padding="10"
                        Command="{Binding SaveChangesCommand}"
                        Content="SAVE CHANGES"
                        Style="{StaticResource RegularButton}" />

                    <!--  Line separator  -->
                    <Border Style="{StaticResource LineSeparator}" />

                    <!--  Delete Timer Button  -->
                    <Button
                        Command="{Binding DeleteTimerCommand}"
                        Content="Delete Timer"
                        Style="{StaticResource RegularTextButtonRed}" />

                </StackPanel>

            </Grid>
        </Border>

    </ScrollViewer>
</local:BasePage>
