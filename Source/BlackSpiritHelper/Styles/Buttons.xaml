<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <!--  Order is important  -->
        <ResourceDictionary Source="ColorsLight.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  Hoverless Button  -->
    <Style x:Key="Hoverless" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  System Icon Button  -->
    <Style
        x:Key="SystemIconButton"
        BasedOn="{StaticResource Hoverless}"
        TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Height" Value="8" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <!--  Windows SubControl Button  -->
    <Style
        x:Key="WindowsSubControlButton"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource SystemSubButtonBackgroundBrushKey}" />
        <Setter Property="Padding" Value="10,8" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource SystemSubButtonForegroundBrushKey}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetProperty="Background.Color"
                            To="{StaticResource SystemSubButtonHoverBackground}"
                            Duration="0:0:0.1" />
                        <ColorAnimation
                            Storyboard.TargetProperty="Foreground.Color"
                            To="{StaticResource SystemSubButtonHoverForeground}"
                            Duration="0:0:0.1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetProperty="Background.Color"
                            To="{StaticResource SystemSubButtonBackground}"
                            Duration="0:0:0.1" />
                        <ColorAnimation
                            Storyboard.TargetProperty="Foreground.Color"
                            To="{StaticResource SystemSubButtonForeground}"
                            Duration="0:0:0.1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource SystemSubButtonActiveBackgroundBrushKey}" />
                <Setter Property="Foreground" Value="{StaticResource SystemSubButtonHoverForegroundBrushKey}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!--  Windows Control Button  -->
    <Style
        x:Key="WindowsControlButton"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource SystemButtonBackgroundBrushKey}" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource SystemButtonForegroundBrushKey}" />

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.4" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetProperty="Background.Color"
                            To="{StaticResource SystemButtonHoverBackground}"
                            Duration="0:0:0.1" />
                        <ColorAnimation
                            Storyboard.TargetProperty="Foreground.Color"
                            To="{StaticResource SystemButtonHoverForeground}"
                            Duration="0:0:0.1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetProperty="Background.Color"
                            To="{StaticResource SystemButtonBackground}"
                            Duration="0:0:0.1" />
                        <ColorAnimation
                            Storyboard.TargetProperty="Foreground.Color"
                            To="{StaticResource SystemButtonForeground}"
                            Duration="0:0:0.1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource SystemButtonActiveBackgroundBrushKey}" />
                <Setter Property="Foreground" Value="{StaticResource SystemButtonHoverForegroundBrushKey}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!--  Windows Close Button  -->
    <Style
        x:Key="WindowsCloseButton"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource SystemRedButtonBackgroundBrushKey}" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource SystemRedButtonForegroundBrushKey}" />

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.4" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetProperty="Background.Color"
                            To="{StaticResource SystemRedButtonHoverBackground}"
                            Duration="0:0:0.1" />
                        <ColorAnimation
                            Storyboard.TargetProperty="Foreground.Color"
                            To="{StaticResource SystemRedButtonHoverForeground}"
                            Duration="0:0:0.1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetProperty="Background.Color"
                            To="{StaticResource SystemRedButtonBackground}"
                            Duration="0:0:0.1" />
                        <ColorAnimation
                            Storyboard.TargetProperty="Foreground.Color"
                            To="{StaticResource SystemRedButtonForeground}"
                            Duration="0:0:0.1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource SystemRedButtonActiveBackgroundBrushKey}" />
                <Setter Property="Foreground" Value="{StaticResource SystemRedButtonHoverForegroundBrushKey}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!--  Application Button  -->
    <Style
        x:Key="ApplcationButton"
        BasedOn="{StaticResource Hoverless}"
        TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Padding" Value="10" />
    </Style>

    <!--  Regular Text Button  -->
    <Style
        x:Key="RegularTextButton"
        BasedOn="{StaticResource Hoverless}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource RegularButtonForegroundBrushKey}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoMediumItalic}" />
        <Setter Property="TextBlock.TextDecorations" Value="None" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Padding" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="True">
                        <TextBlock
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            FontFamily="{TemplateBinding FontFamily}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Text="{TemplateBinding Content}"
                            TextDecorations="{TemplateBinding TextBlock.TextDecorations}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetProperty="Foreground.Color"
                                        To="{StaticResource RegularButtonHover}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetProperty="Foreground.Color"
                                        To="{StaticResource RegularButtonForeground}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="TextBlock.TextDecorations" Value="Underline" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource RegularButtonActionBrushKey}" />
                            <Setter Property="TextBlock.TextDecorations" Value="Underline" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Regular Text Button - Red  -->
    <Style
        x:Key="RegularTextButtonRed"
        BasedOn="{StaticResource RegularTextButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource RegularTextButtonRedForegroundBrushKey}" />
        <Setter Property="TextBlock.TextDecorations" Value="None" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="True">
                        <TextBlock
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            FontFamily="{TemplateBinding FontFamily}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Text="{TemplateBinding Content}"
                            TextDecorations="{TemplateBinding TextBlock.TextDecorations}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetProperty="Foreground.Color"
                                        To="{StaticResource RegularTextButtonRedHover}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetProperty="Foreground.Color"
                                        To="{StaticResource RegularTextButtonRedForeground}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="TextBlock.TextDecorations" Value="Underline" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource RegularTextButtonRedActionBrushKey}" />
                            <Setter Property="TextBlock.TextDecorations" Value="Underline" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Regular Button  -->
    <Style
        x:Key="RegularButton"
        BasedOn="{StaticResource Hoverless}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource RegularButtonBackgroundBrushKey}" />
        <Setter Property="Foreground" Value="{StaticResource RegularButtonForegroundBrushKey}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource RegularButtonActionBrushKey}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="FontSize" Value="14" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="True">
                        <TextBlock
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            FontFamily="{TemplateBinding FontFamily}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource RegularButtonHover}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource RegularButtonBackground}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource RegularButtonActionBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource RegularButtonHoverBrushKey}" />
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Regular Button - No Color  -->
    <Style
        x:Key="RegularButtonNoColor"
        BasedOn="{StaticResource RegularButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource RegularNoColorButtonForegroundBrushKey}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource RegularNoColorButtonActionBrushKey}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="True">
                        <TextBlock
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            FontFamily="{TemplateBinding FontFamily}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="TextElement.Foreground" Value="{StaticResource RegularNoColorButtonHoverBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="TextElement.Foreground" Value="{StaticResource RegularNoColorButtonActionBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="TextElement.Foreground" Value="{StaticResource RegularNoColorButtonHoverBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Regular Button - Light  -->
    <Style
        x:Key="RegularButtonLight"
        BasedOn="{StaticResource Hoverless}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource RegularLightButtonBackgroundBrushKey}" />
        <Setter Property="Foreground" Value="{StaticResource RegularLightButtonForegroundBrushKey}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource RegularLightButtonActionBrushKey}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="True">
                        <TextBlock
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            FontFamily="{TemplateBinding FontFamily}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource RegularLightButtonHover}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource RegularLightButtonBackground}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource RegularLightButtonActionBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource RegularLightButtonHoverBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Regular Button - Blue  -->
    <Style
        x:Key="RegularButtonBlue"
        BasedOn="{StaticResource RegularButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource RegularBlueButtonBackgroundBrushKey}" />
        <Setter Property="Foreground" Value="{StaticResource RegularBlueButtonForegroundBrushKey}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource RegularBlueButtonActionBrushKey}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="True">
                        <TextBlock
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            FontFamily="{TemplateBinding FontFamily}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource RegularBlueButtonHover}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource RegularBlueButtonBackground}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource RegularBlueButtonActionBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource RegularBlueButtonHoverBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Regular Button - Warning Mode  -->
    <Style
        x:Key="RegularButtonWarningMode"
        BasedOn="{StaticResource RegularButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource RegularWarningModeButtonBackgroundBrushKey}" />
        <Setter Property="Foreground" Value="{StaticResource RegularWarningModeButtonForegroundBrushKey}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource RegularWarningModeButtonActionBrushKey}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="True">
                        <TextBlock
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            FontFamily="{TemplateBinding FontFamily}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource RegularWarningModeButtonHover}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource RegularWarningModeButtonBackground}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource RegularWarningModeButtonActionBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource RegularWarningModeButtonHoverBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Regular Button - Yellow  -->
    <Style
        x:Key="RegularButtonYellow"
        BasedOn="{StaticResource RegularButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource RegularYellowButtonBackgroundBrushKey}" />
        <Setter Property="Foreground" Value="{StaticResource RegularYellowButtonForegroundBrushKey}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource RegularYellowButtonActionBrushKey}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="True">
                        <TextBlock
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            FontFamily="{TemplateBinding FontFamily}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource RegularYellowButtonHover}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource RegularYellowButtonBackground}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource RegularYellowButtonActionBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource RegularYellowButtonHoverBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Regular Button - Red  -->
    <Style
        x:Key="RegularButtonRed"
        BasedOn="{StaticResource RegularButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource RegularRedButtonBackgroundBrushKey}" />
        <Setter Property="Foreground" Value="{StaticResource RegularRedButtonForegroundBrushKey}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource RegularRedButtonActionBrushKey}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="True">
                        <TextBlock
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            FontFamily="{TemplateBinding FontFamily}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource RegularRedButtonHover}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource RegularRedButtonBackground}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource RegularRedButtonActionBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource RegularRedButtonHoverBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  SideMenu Button  -->
    <Style
        x:Key="SideMenuButton"
        BasedOn="{StaticResource RegularButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource SideMenuButtonBackgroundBrushKey}" />
        <Setter Property="Foreground" Value="{StaticResource SideMenuForegroundBrushKey}" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="True">
                        <TextBlock
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            FontFamily="{TemplateBinding FontFamily}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource SideMenuButtonHover}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource SideMenuButtonBackground}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource SideMenuButtonActionBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource SideMenuButtonActionBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  SideMenu Button Dark  -->
    <Style
        x:Key="SideMenuButtonDark"
        BasedOn="{StaticResource RegularButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource SideMenuButtonDarkBackgroundBrushKey}" />
        <Setter Property="Foreground" Value="{StaticResource SideMenuForegroundBrushKey}" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="True">
                        <TextBlock
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            FontFamily="{TemplateBinding FontFamily}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource SideMenuButtonDarkHover}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource SideMenuButtonDarkBackground}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource SideMenuButtonDarkActionBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource SideMenuButtonDarkActionBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Donate Button  -->
    <Style
        x:Key="DonateButton"
        BasedOn="{StaticResource RegularButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0, 0" EndPoint="1, 0">
                    <GradientStop Offset="0.0" Color="{StaticResource RegularDonateButtonBackground}" />
                    <GradientStop Offset="1.0" Color="{StaticResource RegularDonateButtonBackgroundAlt}" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource RegularDonateButtonForegroundBrushKey}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{StaticResource LatoHeavyItalic}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Rectangle
                                x:Name="innerBorder"
                                Stroke="{StaticResource RegularDonateButtonForegroundDropShadowBrushKey}"
                                StrokeThickness="0" />
                            <TextBlock
                                x:Name="text"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                FontFamily="{TemplateBinding FontFamily}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Text="{TemplateBinding Content}">
                                <TextBlock.Effect>
                                    <DropShadowEffect
                                        BlurRadius="7"
                                        Direction="0"
                                        ShadowDepth="0"
                                        Color="{StaticResource RegularDonateButtonForegroundDropShadow}" />
                                </TextBlock.Effect>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Window.Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard AutoReverse="True" RepeatBehavior="Forever">
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Button.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
                                            From="{StaticResource RegularDonateButtonBackground}"
                                            To="{StaticResource RegularDonateButtonBackgroundAlt}"
                                            Duration="0:0:5" />
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Button.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
                                            From="{StaticResource RegularDonateButtonBackgroundAlt}"
                                            To="{StaticResource RegularDonateButtonBackground}"
                                            Duration="0:0:5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="innerBorder"
                                        Storyboard.TargetProperty="StrokeThickness"
                                        From="0"
                                        To="2"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="innerBorder"
                                        Storyboard.TargetProperty="StrokeThickness"
                                        From="2"
                                        To="0"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="text" Property="Foreground" Value="{StaticResource RegularDonateButtonActionBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Overlay Play Button  -->
    <Style
        x:Key="OverlayPlayButton"
        BasedOn="{StaticResource Hoverless}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource OverlayPlayButtonBackgroundBrushKey}" />
        <Setter Property="Foreground" Value="{StaticResource OverlayPlayButtonForegroundBrushKey}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource OverlayPlayButtonActionBrushKey}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Focusable" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="True">
                        <TextBlock
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            FontFamily="{TemplateBinding FontFamily}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetProperty="Foreground.Color"
                                        To="{StaticResource OverlayPlayButtonHover}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetProperty="Foreground.Color"
                                        To="{StaticResource OverlayPlayButtonForeground}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource OverlayPlayButtonActionBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource OverlayPlayButtonHoverBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Overlay Pause Button  -->
    <Style
        x:Key="OverlayPauseButton"
        BasedOn="{StaticResource Hoverless}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource OverlayPauseButtonBackgroundBrushKey}" />
        <Setter Property="Foreground" Value="{StaticResource OverlayPauseButtonForegroundBrushKey}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource OverlayPauseButtonActionBrushKey}" />
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Focusable" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="True">
                        <TextBlock
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            FontFamily="{TemplateBinding FontFamily}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetProperty="Foreground.Color"
                                        To="{StaticResource OverlayPauseButtonHover}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                        Storyboard.TargetProperty="Foreground.Color"
                                        To="{StaticResource OverlayPauseButtonForeground}"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource OverlayPauseButtonActionBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource OverlayPauseButtonHoverBrushKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Schedule Button - Remove  -->
    <Style
        x:Key="ScheduleButtonRemove"
        BasedOn="{StaticResource RegularButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ScheduleRemoveButtonBackgroundBrushKey}" />
        <Setter Property="Foreground" Value="{StaticResource ScheduleRemoveButtonForegroundBrushKey}" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Rectangle
                                x:Name="innerBorder"
                                Stroke="{StaticResource ScheduleRemoveButtonHoverBrushKey}"
                                StrokeThickness="0" />
                            <TextBlock
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                FontFamily="{TemplateBinding FontFamily}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Text="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="innerBorder"
                                        Storyboard.TargetProperty="StrokeThickness"
                                        From="0"
                                        To="2"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="innerBorder"
                                        Storyboard.TargetProperty="StrokeThickness"
                                        From="2"
                                        To="0"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ScheduleRemoveButtonActionBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Schedule Button - Add  -->
    <Style
        x:Key="ScheduleButtonAdd"
        BasedOn="{StaticResource RegularButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ScheduleAddButtonBackgroundBrushKey}" />
        <Setter Property="Foreground" Value="{StaticResource ScheduleAddButtonForegroundBrushKey}" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Rectangle
                                x:Name="innerBorder"
                                Stroke="{StaticResource ScheduleAddButtonHoverBrushKey}"
                                StrokeThickness="0" />
                            <TextBlock
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                FontFamily="{TemplateBinding FontFamily}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Text="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="innerBorder"
                                        Storyboard.TargetProperty="StrokeThickness"
                                        From="0"
                                        To="2"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="innerBorder"
                                        Storyboard.TargetProperty="StrokeThickness"
                                        From="2"
                                        To="0"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ScheduleAddButtonActionBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>