<UserControl
    x:Class="BlackSpiritHelper.OverlayScheduleSectionControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:BlackSpiritHelper.Core;assembly=BlackSpiritHelper.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:BlackSpiritHelper"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="50"
    d:DesignWidth="200"
    mc:Ignorable="d">

    <!--
        Schedule countdown box
        +
        schedule items listing
    -->

    <!--  Derived from OverlayWindow  -->
    <StackPanel
        x:Name="OverlayScheduleSection"
        Margin="0"
        DataContext="{Binding ApplicationDataContent.ScheduleData, Source={x:Static local:ViewModelLocator.Instance}}"
        Orientation="{Binding DataContext.BaseOverlay.OverlayOrientation, FallbackValue=Horizontal, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}">
        <StackPanel.Style>
            <Style TargetType="StackPanel">
                <Setter Property="Visibility" Value="Collapsed" />
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsRunning}" Value="True" />
                            <Condition Binding="{Binding ShowInOverlay}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </StackPanel.Style>

        <ItemsControl x:Name="ItemList" ItemsSource="{Binding NextItemPresenterList}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <!--  Wrap Items into stack panel  -->
                    <StackPanel Orientation="{Binding DataContext.BaseOverlay.OverlayOrientation, FallbackValue=Horizontal, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <!--  Template - add leading timer box  -->
            <ItemsControl.Template>
                <ControlTemplate>

                    <StackPanel Orientation="{Binding DataContext.BaseOverlay.OverlayOrientation, FallbackValue=Horizontal, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}">

                        <!--  Leading timer box  -->
                        <Border Width="{Binding Path=DataContext.BaseOverlay.SizeValue, FallbackValue=50, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}" Height="{Binding Path=DataContext.BaseOverlay.SizeValue, FallbackValue=50, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Background" Value="{StaticResource ScheduleOverlayBackgroundBrushKey}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding WarningFlag}" Value="True">
                                            <Setter Property="Background" Value="{StaticResource WarningColorBrushKey}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>

                            <Grid Margin="{Binding ApplicationDataContent.OverlayData.BaseOverlay.Size, Source={x:Static local:ViewModelLocator.Instance}, Converter={local:BaseOverlaySizeMarginValueConverter}, FallbackValue=5}">

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="2*" />
                                    <RowDefinition Height="2*" />
                                </Grid.RowDefinitions>

                                <!--  Schedule title  -->
                                <Viewbox
                                    Grid.Row="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Top">
                                    <TextBlock
                                        FontFamily="{StaticResource LatoHeavy}"
                                        FontSize="14"
                                        Text="NEXT">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Foreground" Value="{StaticResource ScheduleOverlayForegroundBrushKey}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding WarningFlag}" Value="True">
                                                        <Setter Property="Foreground" Value="{StaticResource WarningForegroundBrushKey}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Viewbox>

                                <!--  Countdown  -->
                                <Viewbox
                                    Grid.Row="1"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Bottom">
                                    <TextBlock FontFamily="{StaticResource LatoHeavy}" Text="{Binding TimeLeftOverlayPresenter, FallbackValue=0.00:00:00}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Foreground" Value="{StaticResource ScheduleOverlayForegroundBrushKey}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding WarningFlag}" Value="True">
                                                        <Setter Property="Foreground" Value="{StaticResource WarningForegroundBrushKey}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Viewbox>

                            </Grid>
                        </Border>

                        <!--  Items Presenter  -->
                        <ItemsPresenter />

                    </StackPanel>

                </ControlTemplate>
            </ItemsControl.Template>

            <ItemsControl.ItemTemplate>
                <DataTemplate>

                    <!--  Item wrapper  -->
                    <local:OverlayScheduleSectionItemControl Width="{Binding Path=DataContext.BaseOverlay.SizeValue, FallbackValue=50, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}" Height="{Binding Path=DataContext.BaseOverlay.SizeValue, FallbackValue=50, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}" />

                </DataTemplate>
            </ItemsControl.ItemTemplate>

        </ItemsControl>

    </StackPanel>

</UserControl>
