<Window
    x:Class="BlackSpiritHelper.OverlayWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:BlackSpiritHelper"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="{Binding ApplicationViewModel.ApplicationName, Source={x:Static local:ViewModelLocator.Instance}, StringFormat='{}{0} - Overlay', FallbackValue='Title Placeholder'}"
    AllowsTransparency="True"
    Background="Transparent"
    Closed="Window_Closed"
    Icon="/BlackSpiritHelper;component/icon_white.ico"
    Initialized="Window_Initialized"
    Loaded="Window_Loaded"
    WindowStartupLocation="Manual"
    WindowStyle="None"
    mc:Ignorable="d">

    <!--  Window Content  -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!--  Canvas  -->
        <Canvas
            Grid.Row="0"
            Grid.Column="0"
            DataContext="{Binding ApplicationDataContent.OverlayData, Source={x:Static local:ViewModelLocator.Instance}}"
            SnapsToDevicePixels="True"
            UseLayoutRounding="True">

            <!--  Canvas Content - Base Overlay  -->
            <Border
                x:Name="BaseOverlayObject"
                Canvas.Left="{Binding BaseOverlay.PosX, Mode=TwoWay}"
                Canvas.Top="{Binding BaseOverlay.PosY, Mode=TwoWay}"
                Panel.ZIndex="10"
                MouseLeftButtonDown="OnMouseLeftButtonDown"
                MouseLeftButtonUp="OnMouseLeftButtonUp"
                MouseMove="OnMouseMove">

                <!--  Draggable Border Background  -->
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Background" Value="Transparent" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource DraggableZoneBrushKey}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <!--  Draggable Border - IsDraggable Border  -->
                    <Rectangle StrokeThickness="2">
                        <Rectangle.Style>
                            <Style TargetType="Rectangle">
                                <Setter Property="Stroke" Value="Transparent" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=BaseOverlayObject}" Value="True">
                                        <Setter Property="Stroke" Value="{StaticResource DraggableZoneBrushKey}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsDraggingLocked}" Value="True">
                                        <Setter Property="Stroke" Value="Transparent" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>

                    <!--  Overlay Object Content Wrapper  -->
                    <StackPanel Orientation="{Binding BaseOverlay.OverlayOrientation, FallbackValue=Horizontal}">

                        <!--  Overlay Object Item Wrapper  -->
                        <Button Padding="0" Focusable="False">
                            <!--  Drop Shadow & Margin Box  -->
                            <Button.Style>
                                <Style BasedOn="{StaticResource Hoverless}" TargetType="Button">
                                    <!--  Overlay Object Drop Shadow  -->
                                    <Setter Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect
                                                BlurRadius="10"
                                                Opacity="0.25"
                                                ShadowDepth="0" />
                                        </Setter.Value>
                                    </Setter>
                                    <!--  Margin  -->
                                    <Setter Property="Margin" Value="25,25,15,25" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BaseOverlay.OverlayOrientation}" Value="Vertical">
                                            <Setter Property="Margin" Value="25,25,25,15" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>

                            <!--  Content  -->
                            <StackPanel
                                x:Name="OverlayContentWrapper"
                                Width="{Binding BaseOverlay.SizeWidthValue, FallbackValue=Auto}"
                                Height="{Binding BaseOverlay.SizeHeightValue, FallbackValue=50}"
                                MinWidth="{Binding BaseOverlay.SizeValue, FallbackValue=50}"
                                MinHeight="{Binding BaseOverlay.SizeValue, FallbackValue=50}"
                                Orientation="{Binding BaseOverlay.OverlayOrientation, FallbackValue=Horizontal}"
                                SizeChanged="OverlayContentWrapper_SizeChanged">

                                <!--  Content - Instances of overlay representation  -->

                                <!--  Timer section  -->
                                <local:OverlayTimerSectionControl Width="{Binding BaseOverlay.SizeWidthValue, FallbackValue=Auto}" Height="{Binding BaseOverlay.SizeHeightValue, FallbackValue=50}">
                                    <local:OverlayTimerSectionControl.Style>
                                        <Style TargetType="local:OverlayTimerSectionControl">
                                            <Setter Property="Margin" Value="0,0,10,0" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding BaseOverlay.OverlayOrientation}" Value="Vertical">
                                                    <Setter Property="Margin" Value="0,0,0,10" />
                                                </DataTrigger>
                                                <Trigger Property="ActualWidth" Value="0">
                                                    <Setter Property="Margin" Value="0" />
                                                </Trigger>
                                                <Trigger Property="ActualHeight" Value="0">
                                                    <Setter Property="Margin" Value="0" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </local:OverlayTimerSectionControl.Style>
                                </local:OverlayTimerSectionControl>

                                <!--  Schedule section  -->
                                <local:OverlayScheduleSectionControl Width="{Binding BaseOverlay.SizeWidthValue, FallbackValue=Auto}" Height="{Binding BaseOverlay.SizeHeightValue, FallbackValue=50}">
                                    <local:OverlayScheduleSectionControl.Style>
                                        <Style TargetType="local:OverlayScheduleSectionControl">
                                            <Setter Property="Margin" Value="0,0,10,0" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding BaseOverlay.OverlayOrientation}" Value="Vertical">
                                                    <Setter Property="Margin" Value="0,0,0,10" />
                                                </DataTrigger>
                                                <Trigger Property="ActualWidth" Value="0">
                                                    <Setter Property="Margin" Value="0" />
                                                </Trigger>
                                                <Trigger Property="ActualHeight" Value="0">
                                                    <Setter Property="Margin" Value="0" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </local:OverlayScheduleSectionControl.Style>
                                </local:OverlayScheduleSectionControl>

                            </StackPanel>

                        </Button>

                        <!--  Overlay Object Control Wrapper  -->
                        <StackPanel Orientation="{Binding BaseOverlay.OverlayOrientation, FallbackValue=Horizontal}">
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=BaseOverlayObject}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>

                            <!--  Show MainWindow BTN  -->
                            <Button
                                Padding="4"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Command="{Binding ShowMainWindowCommand}"
                                Content="{StaticResource FontAwesomeExternalLinkSquareAltIcon}"
                                Focusable="False"
                                FontFamily="{StaticResource FontAwesomeSolid}"
                                FontSize="16">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource RegularButtonNoColor}" TargetType="Button">
                                        <Setter Property="Margin" Value="0,0,10,0" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding BaseOverlay.OverlayOrientation}" Value="Vertical">
                                                <Setter Property="Margin" Value="0,0,0,10" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>

                            <!--  Controls - Lock/Unlock BTN  -->
                            <Button
                                Padding="4"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Command="{Binding LockOverlayDraggingCommand}"
                                Content="{StaticResource FontAwesomeLockIcon}"
                                Focusable="False"
                                FontFamily="{StaticResource FontAwesomeSolid}"
                                FontSize="16"
                                Style="{StaticResource RegularButtonNoColor}"
                                Visibility="{Binding IsDraggingLocked, Converter={local:BooleanToVisibilityGoneConverter}}" />
                            <Button
                                Padding="4"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Command="{Binding LockOverlayDraggingCommand}"
                                Content="{StaticResource FontAwesomeUnlockIcon}"
                                Focusable="False"
                                FontFamily="{StaticResource FontAwesomeSolid}"
                                FontSize="16"
                                Style="{StaticResource RegularButtonNoColor}"
                                Visibility="{Binding IsDraggingLocked, Converter={local:BooleanToVisibilityGoneConverter}, ConverterParameter=True}" />
                        </StackPanel>

                        <!--  Spacer  -->
                        <Border Margin="25,25,0,0" />

                    </StackPanel>
                </Grid>
            </Border>

            <!--  Canvas Content - Screen Capture Overlay  -->
            <Border
                x:Name="ScreenCaptureOverlayObject"
                Canvas.Left="{Binding ScreenCaptureOverlay.PosX, Mode=TwoWay}"
                Canvas.Top="{Binding ScreenCaptureOverlay.PosY, Mode=TwoWay}"
                Panel.ZIndex="1"
                IsEnabled="{Binding IsScreenCaptureActive}"
                IsEnabledChanged="ScreenCaptureOverlayObject_IsEnabledChanged"
                MouseLeftButtonDown="OnMouseLeftButtonDown"
                MouseLeftButtonUp="OnMouseLeftButtonUp"
                MouseMove="OnMouseMove"
                Visibility="{Binding IsScreenCaptureActive, Converter={local:BooleanToVisibilityGoneConverter}}">
                <!--  Draggable Border Background  -->
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Background" Value="Transparent" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource DraggableZoneBrushKey}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <!--  Draggable Border - IsDraggable Border  -->
                    <Rectangle StrokeThickness="2">
                        <Rectangle.Style>
                            <Style TargetType="Rectangle">
                                <Setter Property="Stroke" Value="Transparent" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=ScreenCaptureOverlayObject}" Value="True">
                                        <Setter Property="Stroke" Value="{StaticResource DraggableZoneBrushKey}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsDraggingLocked}" Value="True">
                                        <Setter Property="Stroke" Value="Transparent" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                    <!--  Capture Preview  -->
                    <Border Padding="25">
                        <!--  Screen Canvas  -->
                        <Rectangle
                            x:Name="ScreenCaptureCanvas"
                            Width="10"
                            Height="10"
                            Fill="#01000000"
                            Focusable="False" />
                    </Border>
                </Grid>
            </Border>
        </Canvas>
    </Grid>

</Window>
